# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-08-03 22:34
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('fleet', '0001_initial'),
        ('stop', '__first__'),
        ('bike', '__first__'),
        ('vehicle', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Damage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('damage', models.CharField(choices=[('M', '(Minor) damage which requires attention but does not impact the operation of the asset.'), ('R', '(Repairable) damage which impacts the operation of the asset but can be repaired.'), ('T', '(Totaled) damage which cannot or should not be repaired and renders the asset unusable.'), ('L', '(Loss) loss or theft of asset.')], max_length=1)),
                ('description', models.TextField(blank=True)),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('code', models.CharField(choices=[('A', 'Asset is in inventory but not deployed/distributed.'), ('D', 'Asset shows damage. Follow-up with appropriate damage form.'), ('I', 'Asset should be inspected by someone trained to assess the asset.'), ('P', 'Asset passed inventory level-of-service standards.'), ('S', 'Asset should be swapped out with another asset.'), ('U', 'Asset is neither in inventory nor deployed/distributed.')], max_length=1)),
                ('notes', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repair', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('repair_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='BikeDamage',
            fields=[
                ('damage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maintenance.Damage')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bike.Bike')),
            ],
            bases=('maintenance.damage',),
        ),
        migrations.CreateModel(
            name='BikeGPSDamage',
            fields=[
                ('damage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maintenance.Damage')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bike.BikeGPS')),
            ],
            bases=('maintenance.damage',),
        ),
        migrations.CreateModel(
            name='BikeGPSInventory',
            fields=[
                ('inventory_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maintenance.Inventory')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bike.BikeGPS')),
            ],
            bases=('maintenance.inventory',),
        ),
        migrations.CreateModel(
            name='BikeGPSMaintenance',
            fields=[
                ('maintenance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maintenance.Maintenance')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bike.BikeGPS')),
                ('damage_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='maintenance.BikeGPSDamage')),
            ],
            bases=('maintenance.maintenance',),
        ),
        migrations.CreateModel(
            name='BikeInventory',
            fields=[
                ('inventory_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maintenance.Inventory')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bike.Bike')),
            ],
            bases=('maintenance.inventory',),
        ),
        migrations.CreateModel(
            name='BikeMaintenance',
            fields=[
                ('maintenance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maintenance.Maintenance')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bike.Bike')),
                ('damage_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='maintenance.BikeDamage')),
            ],
            bases=('maintenance.maintenance',),
        ),
        migrations.CreateModel(
            name='FleetAssetDamage',
            fields=[
                ('damage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maintenance.Damage')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fleet.FleetAsset')),
            ],
            bases=('maintenance.damage',),
        ),
        migrations.CreateModel(
            name='FleetAssetInventory',
            fields=[
                ('inventory_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maintenance.Inventory')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fleet.FleetAsset')),
            ],
            bases=('maintenance.inventory',),
        ),
        migrations.CreateModel(
            name='FleetAssetMaintenance',
            fields=[
                ('maintenance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maintenance.Maintenance')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fleet.FleetAsset')),
                ('damage_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='maintenance.FleetAssetDamage')),
            ],
            bases=('maintenance.maintenance',),
        ),
        migrations.CreateModel(
            name='LockDamage',
            fields=[
                ('damage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maintenance.Damage')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bike.Lock')),
            ],
            bases=('maintenance.damage',),
        ),
        migrations.CreateModel(
            name='LockInventory',
            fields=[
                ('inventory_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maintenance.Inventory')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bike.Lock')),
            ],
            bases=('maintenance.inventory',),
        ),
        migrations.CreateModel(
            name='LockMaintenance',
            fields=[
                ('maintenance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maintenance.Maintenance')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bike.Lock')),
                ('damage_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='maintenance.LockDamage')),
            ],
            bases=('maintenance.maintenance',),
        ),
        migrations.CreateModel(
            name='StopDamage',
            fields=[
                ('damage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maintenance.Damage')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stop.Stop')),
            ],
            bases=('maintenance.damage',),
        ),
        migrations.CreateModel(
            name='StopInventory',
            fields=[
                ('inventory_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maintenance.Inventory')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stop.Stop')),
            ],
            bases=('maintenance.inventory',),
        ),
        migrations.CreateModel(
            name='StopMaintenance',
            fields=[
                ('maintenance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maintenance.Maintenance')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stop.Stop')),
                ('damage_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='maintenance.StopDamage')),
            ],
            bases=('maintenance.maintenance',),
        ),
        migrations.CreateModel(
            name='VehicleDamage',
            fields=[
                ('damage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maintenance.Damage')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicle.Vehicle')),
            ],
            bases=('maintenance.damage',),
        ),
        migrations.CreateModel(
            name='VehicleInventory',
            fields=[
                ('inventory_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maintenance.Inventory')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicle.Vehicle')),
            ],
            bases=('maintenance.inventory',),
        ),
        migrations.CreateModel(
            name='VehicleMaintenance',
            fields=[
                ('maintenance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='maintenance.Maintenance')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicle.Vehicle')),
                ('damage_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='maintenance.VehicleDamage')),
            ],
            bases=('maintenance.maintenance',),
        ),
    ]
